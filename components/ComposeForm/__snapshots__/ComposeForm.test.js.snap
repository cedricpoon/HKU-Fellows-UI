// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing ComposeForm Component can toggle mode 1`] = `
<Styled(Content)
  padder={true}
>
  <Styled(Form)>
    <Styled(Item)
      regular={true}
    >
      <Styled(Input)
        disabled={false}
        placeholder="Title (Compulsory)"
        style={
          Array [
            Object {
              "fontSize": 15,
              "height": 30,
              "paddingLeft": 10,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
        value={null}
      />
    </Styled(Item)>
    <Styled(Item)
      regular={true}
      style={
        Array [
          Object {
            "marginTop": 10,
          },
          false,
          undefined,
        ]
      }
    >
      <Styled(Input)
        disabled={false}
        placeholder="Subtitle"
        style={
          Object {
            "fontSize": 15,
            "height": 30,
            "paddingLeft": 10,
            "paddingRight": 5,
          }
        }
        value={null}
      />
    </Styled(Item)>
    <Styled(Item)
      regular={true}
      style={
        Array [
          Object {
            "marginTop": 10,
          },
          false,
        ]
      }
    >
      <Styled(Input)
        placeholder="Hashtags (Max. 2, E.g. #AY18#Tutor1)"
        style={
          Object {
            "fontSize": 15,
            "height": 30,
            "paddingLeft": 10,
            "paddingRight": 5,
          }
        }
      />
    </Styled(Item)>
    <Styled(Textarea)
      bordered={true}
      placeholder="Content (Compulsory)"
      style={
        Array [
          Object {
            "height": 100,
          },
          Object {
            "marginTop": 10,
          },
        ]
      }
    />
    <Styled(Button)
      dark={false}
      full={true}
      light={true}
      onPress={[Function]}
      style={
        Object {
          "marginTop": 10,
        }
      }
    >
      <Styled(Text)
        style={
          Object {
            "fontSize": 15,
          }
        }
      >
        As Native Post
      </Styled(Text)>
    </Styled(Button)>
  </Styled(Form)>
  <Styled(ViewNB)
    style={
      Object {
        "flexDirection": "row",
        "marginTop": 10,
      }
    }
  >
    <Styled(Text)
      note={true}
      style={
        Object {
          "fontSize": 12.5,
          "fontStyle": "italic",
          "marginRight": 5,
        }
      }
    >
      ** Content can be styled in
    </Styled(Text)>
    <Styled(Text)
      onPress={[Function]}
      style={
        Array [
          Object {
            "fontSize": 12.5,
            "fontStyle": "italic",
            "marginRight": 5,
          },
          Object {
            "color": "#3B96DC",
            "fontStyle": "normal",
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      Markdown
    </Styled(Text)>
  </Styled(ViewNB)>
</Styled(Content)>
`;

exports[`Testing ComposeForm Component is a reply 1`] = `
<Styled(Content)
  padder={true}
>
  <Styled(Form)>
    <Styled(Item)
      regular={true}
      style={
        Object {
          "borderBottomWidth": 0,
          "borderLeftWidth": 2,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
        }
      }
    >
      <Styled(Input)
        disabled={true}
        placeholder="Title (Compulsory)"
        style={
          Array [
            Object {
              "fontSize": 15,
              "height": 30,
              "paddingLeft": 10,
              "paddingRight": 5,
            },
            Object {
              "fontWeight": "600",
            },
          ]
        }
        value="Re: title"
      />
    </Styled(Item)>
    <Styled(Item)
      regular={true}
      style={
        Array [
          Object {
            "marginTop": 10,
          },
          false,
          Object {
            "borderBottomWidth": 0,
            "borderLeftWidth": 2,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
          },
        ]
      }
    >
      <Styled(Input)
        disabled={true}
        placeholder="- No Subtitle -"
        style={
          Object {
            "fontSize": 15,
            "height": 30,
            "paddingLeft": 10,
            "paddingRight": 5,
          }
        }
      />
    </Styled(Item)>
    <Styled(Textarea)
      bordered={true}
      placeholder="Content (Compulsory)"
      style={
        Array [
          Object {
            "height": 100,
          },
          Object {
            "marginTop": 10,
          },
        ]
      }
    />
  </Styled(Form)>
  <Styled(ViewNB)
    style={
      Object {
        "flexDirection": "row",
        "marginTop": 10,
      }
    }
  >
    <Styled(Text)
      note={true}
      style={
        Object {
          "fontSize": 12.5,
          "fontStyle": "italic",
          "marginRight": 5,
        }
      }
    >
      ** Content can be styled in
    </Styled(Text)>
    <Styled(Text)
      onPress={[Function]}
      style={
        Array [
          Object {
            "fontSize": 12.5,
            "fontStyle": "italic",
            "marginRight": 5,
          },
          Object {
            "color": "#3B96DC",
            "fontStyle": "normal",
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      Markdown
    </Styled(Text)>
  </Styled(ViewNB)>
</Styled(Content)>
`;

exports[`Testing ComposeForm Component renders as expected 1`] = `
<Styled(Content)
  padder={true}
>
  <Styled(Form)>
    <Styled(Item)
      regular={true}
    >
      <Styled(Input)
        disabled={false}
        placeholder="Title (Compulsory)"
        style={
          Array [
            Object {
              "fontSize": 15,
              "height": 30,
              "paddingLeft": 10,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
        value={null}
      />
    </Styled(Item)>
    <Styled(Item)
      regular={true}
      style={
        Array [
          Object {
            "marginTop": 10,
          },
          false,
          undefined,
        ]
      }
    >
      <Styled(Input)
        disabled={false}
        placeholder="Subtitle"
        style={
          Object {
            "fontSize": 15,
            "height": 30,
            "paddingLeft": 10,
            "paddingRight": 5,
          }
        }
        value={null}
      />
    </Styled(Item)>
    <Styled(Item)
      regular={true}
      style={
        Array [
          Object {
            "marginTop": 10,
          },
          false,
        ]
      }
    >
      <Styled(Input)
        placeholder="Hashtags (Max. 2, E.g. #AY18#Tutor1)"
        style={
          Object {
            "fontSize": 15,
            "height": 30,
            "paddingLeft": 10,
            "paddingRight": 5,
          }
        }
      />
    </Styled(Item)>
    <Styled(Textarea)
      bordered={true}
      placeholder="Content (Compulsory)"
      style={
        Array [
          Object {
            "height": 100,
          },
          Object {
            "marginTop": 10,
          },
        ]
      }
    />
  </Styled(Form)>
  <Styled(ViewNB)
    style={
      Object {
        "flexDirection": "row",
        "marginTop": 10,
      }
    }
  >
    <Styled(Text)
      note={true}
      style={
        Object {
          "fontSize": 12.5,
          "fontStyle": "italic",
          "marginRight": 5,
        }
      }
    >
      ** Content can be styled in
    </Styled(Text)>
    <Styled(Text)
      onPress={[Function]}
      style={
        Array [
          Object {
            "fontSize": 12.5,
            "fontStyle": "italic",
            "marginRight": 5,
          },
          Object {
            "color": "#3B96DC",
            "fontStyle": "normal",
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      Markdown
    </Styled(Text)>
  </Styled(ViewNB)>
</Styled(Content)>
`;

exports[`Testing ComposeForm Component renders with onTextUpdates 1`] = `
<Styled(Content)
  padder={true}
>
  <Styled(Form)>
    <Styled(Item)
      regular={true}
    >
      <Styled(Input)
        disabled={false}
        onChangeText={[Function]}
        placeholder="Title (Compulsory)"
        style={
          Array [
            Object {
              "fontSize": 15,
              "height": 30,
              "paddingLeft": 10,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
        value={null}
      />
    </Styled(Item)>
    <Styled(Item)
      regular={true}
      style={
        Array [
          Object {
            "marginTop": 10,
          },
          false,
          undefined,
        ]
      }
    >
      <Styled(Input)
        disabled={false}
        placeholder="Subtitle"
        style={
          Object {
            "fontSize": 15,
            "height": 30,
            "paddingLeft": 10,
            "paddingRight": 5,
          }
        }
        value={null}
      />
    </Styled(Item)>
    <Styled(Item)
      regular={true}
      style={
        Array [
          Object {
            "marginTop": 10,
          },
          false,
        ]
      }
    >
      <Styled(Input)
        placeholder="Hashtags (Max. 2, E.g. #AY18#Tutor1)"
        style={
          Object {
            "fontSize": 15,
            "height": 30,
            "paddingLeft": 10,
            "paddingRight": 5,
          }
        }
      />
    </Styled(Item)>
    <Styled(Textarea)
      bordered={true}
      placeholder="Content (Compulsory)"
      style={
        Array [
          Object {
            "height": 100,
          },
          Object {
            "marginTop": 10,
          },
        ]
      }
    />
  </Styled(Form)>
  <Styled(ViewNB)
    style={
      Object {
        "flexDirection": "row",
        "marginTop": 10,
      }
    }
  >
    <Styled(Text)
      note={true}
      style={
        Object {
          "fontSize": 12.5,
          "fontStyle": "italic",
          "marginRight": 5,
        }
      }
    >
      ** Content can be styled in
    </Styled(Text)>
    <Styled(Text)
      onPress={[Function]}
      style={
        Array [
          Object {
            "fontSize": 12.5,
            "fontStyle": "italic",
            "marginRight": 5,
          },
          Object {
            "color": "#3B96DC",
            "fontStyle": "normal",
            "textDecorationLine": "underline",
          },
        ]
      }
    >
      Markdown
    </Styled(Text)>
  </Styled(ViewNB)>
</Styled(Content)>
`;
