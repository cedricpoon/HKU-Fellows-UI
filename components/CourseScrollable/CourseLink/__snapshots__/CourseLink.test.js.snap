// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing CourseLink Component renders as expected in bottomMost with required props and onItemPress 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CourseLink
    bottomMost={true}
    description="None"
    onItemPress={[Function]}
    title="CourseLink"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(ListItem)
        onPress={[Function]}
        style={
          Array [
            Object {
              "paddingRight": 10,
              "paddingVertical": 10,
            },
            false,
          ]
        }
      >
        <Styled(Left)
          style={
            Object {
              "flex": 0,
              "paddingRight": 5,
            }
          }
        >
          <Styled(Text)
            numberOfLines={1}
            style={
              Object {
                "fontSize": 15,
              }
            }
          >
            CourseLink
          </Styled(Text)>
        </Styled(Left)>
        <Styled(Content)>
          <Styled(Text)
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#4E4A47",
                  "fontSize": 15,
                },
              ]
            }
          >
            None
          </Styled(Text)>
        </Styled(Content)>
        <Styled(Right)
          style={
            Object {
              "flex": 0.05,
            }
          }
        >
          <Styled(Icon)
            name="arrow-forward"
            style={
              Array [
                Object {
                  "fontSize": 15,
                },
                Object {
                  "color": "#4E4A47",
                },
              ]
            }
          />
        </Styled(Right)>
      </Styled(ListItem)>,
      "style": Object {
        "opacity": 0,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Left)
            style={
              Object {
                "flex": 0,
                "paddingRight": 5,
              }
            }
          >
            <Styled(Text)
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              CourseLink
            </Styled(Text)>
          </Styled(Left)>,
          <Styled(Content)>
            <Styled(Text)
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ]
              }
            >
              None
            </Styled(Text)>
          </Styled(Content)>,
          <Styled(Right)
            style={
              Object {
                "flex": 0.05,
              }
            }
          >
            <Styled(Icon)
              name="arrow-forward"
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ]
              }
            />
          </Styled(Right)>,
        ],
        "onPress": [Function],
        "style": Array [
          Object {
            "paddingRight": 10,
            "paddingVertical": 10,
          },
          false,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Text)
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              CourseLink
            </Styled(Text)>,
            "style": Object {
              "flex": 0,
              "paddingRight": 5,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "CourseLink",
              "numberOfLines": 1,
              "style": Object {
                "fontSize": 15,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "CourseLink",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Text)
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ]
              }
            >
              None
            </Styled(Text)>,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "None",
              "numberOfLines": 1,
              "style": Array [
                Object {
                  "color": "#4E4A47",
                  "fontSize": 15,
                },
              ],
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "None",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Icon)
              name="arrow-forward"
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ]
              }
            />,
            "style": Object {
              "flex": 0.05,
            },
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "arrow-forward",
              "style": Array [
                Object {
                  "fontSize": 15,
                },
                Object {
                  "color": "#4E4A47",
                },
              ],
              "virtual": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(ListItem)
          onPress={[Function]}
          style={
            Array [
              Object {
                "paddingRight": 10,
                "paddingVertical": 10,
              },
              false,
            ]
          }
        >
          <Styled(Left)
            style={
              Object {
                "flex": 0,
                "paddingRight": 5,
              }
            }
          >
            <Styled(Text)
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              CourseLink
            </Styled(Text)>
          </Styled(Left)>
          <Styled(Content)>
            <Styled(Text)
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ]
              }
            >
              None
            </Styled(Text)>
          </Styled(Content)>
          <Styled(Right)
            style={
              Object {
                "flex": 0.05,
              }
            }
          >
            <Styled(Icon)
              name="arrow-forward"
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ]
              }
            />
          </Styled(Right)>
        </Styled(ListItem)>,
        "style": Object {
          "opacity": 0,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Left)
              style={
                Object {
                  "flex": 0,
                  "paddingRight": 5,
                }
              }
            >
              <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>
            </Styled(Left)>,
            <Styled(Content)>
              <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>
            </Styled(Content)>,
            <Styled(Right)
              style={
                Object {
                  "flex": 0.05,
                }
              }
            >
              <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />
            </Styled(Right)>,
          ],
          "onPress": [Function],
          "style": Array [
            Object {
              "paddingRight": 10,
              "paddingVertical": 10,
            },
            false,
          ],
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>,
              "style": Object {
                "flex": 0,
                "paddingRight": 5,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "CourseLink",
                "numberOfLines": 1,
                "style": Object {
                  "fontSize": 15,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "CourseLink",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "None",
                "numberOfLines": 1,
                "style": Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ],
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "None",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />,
              "style": Object {
                "flex": 0.05,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "arrow-forward",
                "style": Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ],
                "virtual": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing CourseLink Component renders as expected with required props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CourseLink
    description="None"
    onItemPress={[Function]}
    title="CourseLink"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <AnimatedComponent
        style={
          Object {
            "opacity": 0,
          }
        }
      >
        <Styled(ListItem)
          onPress={[Function]}
          style={
            Array [
              Object {
                "paddingRight": 10,
                "paddingVertical": 10,
              },
              Object {
                "borderBottomWidth": 0,
                "marginLeft": 0,
                "paddingLeft": 10,
              },
            ]
          }
        >
          <Styled(Left)
            style={
              Object {
                "flex": 0,
                "paddingRight": 5,
              }
            }
          >
            <Styled(Text)
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              CourseLink
            </Styled(Text)>
          </Styled(Left)>
          <Styled(Content)>
            <Styled(Text)
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ]
              }
            >
              None
            </Styled(Text)>
          </Styled(Content)>
          <Styled(Right)
            style={
              Object {
                "flex": 0.05,
              }
            }
          >
            <Styled(Icon)
              name="arrow-forward"
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ]
              }
            />
          </Styled(Right)>
        </Styled(ListItem)>
      </AnimatedComponent>,
      "style": Object {
        "borderColor": "lightgray",
        "borderLeftWidth": 1,
        "marginLeft": 15,
        "paddingLeft": 10,
      },
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(ListItem)
          onPress={[Function]}
          style={
            Array [
              Object {
                "paddingRight": 10,
                "paddingVertical": 10,
              },
              Object {
                "borderBottomWidth": 0,
                "marginLeft": 0,
                "paddingLeft": 10,
              },
            ]
          }
        >
          <Styled(Left)
            style={
              Object {
                "flex": 0,
                "paddingRight": 5,
              }
            }
          >
            <Styled(Text)
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              CourseLink
            </Styled(Text)>
          </Styled(Left)>
          <Styled(Content)>
            <Styled(Text)
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ]
              }
            >
              None
            </Styled(Text)>
          </Styled(Content)>
          <Styled(Right)
            style={
              Object {
                "flex": 0.05,
              }
            }
          >
            <Styled(Icon)
              name="arrow-forward"
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ]
              }
            />
          </Styled(Right)>
        </Styled(ListItem)>,
        "style": Object {
          "opacity": 0,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Left)
              style={
                Object {
                  "flex": 0,
                  "paddingRight": 5,
                }
              }
            >
              <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>
            </Styled(Left)>,
            <Styled(Content)>
              <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>
            </Styled(Content)>,
            <Styled(Right)
              style={
                Object {
                  "flex": 0.05,
                }
              }
            >
              <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />
            </Styled(Right)>,
          ],
          "onPress": [Function],
          "style": Array [
            Object {
              "paddingRight": 10,
              "paddingVertical": 10,
            },
            Object {
              "borderBottomWidth": 0,
              "marginLeft": 0,
              "paddingLeft": 10,
            },
          ],
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>,
              "style": Object {
                "flex": 0,
                "paddingRight": 5,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "CourseLink",
                "numberOfLines": 1,
                "style": Object {
                  "fontSize": 15,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "CourseLink",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "None",
                "numberOfLines": 1,
                "style": Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ],
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "None",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />,
              "style": Object {
                "flex": 0.05,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "arrow-forward",
                "style": Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ],
                "virtual": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <AnimatedComponent
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <Styled(ListItem)
            onPress={[Function]}
            style={
              Array [
                Object {
                  "paddingRight": 10,
                  "paddingVertical": 10,
                },
                Object {
                  "borderBottomWidth": 0,
                  "marginLeft": 0,
                  "paddingLeft": 10,
                },
              ]
            }
          >
            <Styled(Left)
              style={
                Object {
                  "flex": 0,
                  "paddingRight": 5,
                }
              }
            >
              <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>
            </Styled(Left)>
            <Styled(Content)>
              <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>
            </Styled(Content)>
            <Styled(Right)
              style={
                Object {
                  "flex": 0.05,
                }
              }
            >
              <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />
            </Styled(Right)>
          </Styled(ListItem)>
        </AnimatedComponent>,
        "style": Object {
          "borderColor": "lightgray",
          "borderLeftWidth": 1,
          "marginLeft": 15,
          "paddingLeft": 10,
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(ListItem)
            onPress={[Function]}
            style={
              Array [
                Object {
                  "paddingRight": 10,
                  "paddingVertical": 10,
                },
                Object {
                  "borderBottomWidth": 0,
                  "marginLeft": 0,
                  "paddingLeft": 10,
                },
              ]
            }
          >
            <Styled(Left)
              style={
                Object {
                  "flex": 0,
                  "paddingRight": 5,
                }
              }
            >
              <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>
            </Styled(Left)>
            <Styled(Content)>
              <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>
            </Styled(Content)>
            <Styled(Right)
              style={
                Object {
                  "flex": 0.05,
                }
              }
            >
              <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />
            </Styled(Right)>
          </Styled(ListItem)>,
          "style": Object {
            "opacity": 0,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Left)
                style={
                  Object {
                    "flex": 0,
                    "paddingRight": 5,
                  }
                }
              >
                <Styled(Text)
                  numberOfLines={1}
                  style={
                    Object {
                      "fontSize": 15,
                    }
                  }
                >
                  CourseLink
                </Styled(Text)>
              </Styled(Left)>,
              <Styled(Content)>
                <Styled(Text)
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#4E4A47",
                        "fontSize": 15,
                      },
                    ]
                  }
                >
                  None
                </Styled(Text)>
              </Styled(Content)>,
              <Styled(Right)
                style={
                  Object {
                    "flex": 0.05,
                  }
                }
              >
                <Styled(Icon)
                  name="arrow-forward"
                  style={
                    Array [
                      Object {
                        "fontSize": 15,
                      },
                      Object {
                        "color": "#4E4A47",
                      },
                    ]
                  }
                />
              </Styled(Right)>,
            ],
            "onPress": [Function],
            "style": Array [
              Object {
                "paddingRight": 10,
                "paddingVertical": 10,
              },
              Object {
                "borderBottomWidth": 0,
                "marginLeft": 0,
                "paddingLeft": 10,
              },
            ],
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)
                  numberOfLines={1}
                  style={
                    Object {
                      "fontSize": 15,
                    }
                  }
                >
                  CourseLink
                </Styled(Text)>,
                "style": Object {
                  "flex": 0,
                  "paddingRight": 5,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "CourseLink",
                  "numberOfLines": 1,
                  "style": Object {
                    "fontSize": 15,
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "CourseLink",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#4E4A47",
                        "fontSize": 15,
                      },
                    ]
                  }
                >
                  None
                </Styled(Text)>,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "None",
                  "numberOfLines": 1,
                  "style": Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ],
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "None",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Icon)
                  name="arrow-forward"
                  style={
                    Array [
                      Object {
                        "fontSize": 15,
                      },
                      Object {
                        "color": "#4E4A47",
                      },
                    ]
                  }
                />,
                "style": Object {
                  "flex": 0.05,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "name": "arrow-forward",
                  "style": Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ],
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Testing CourseLink Component renders as expected with required props and onItemPress 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CourseLink
    description="None"
    onItemPress={[Function]}
    title="CourseLink"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <AnimatedComponent
        style={
          Object {
            "opacity": 0,
          }
        }
      >
        <Styled(ListItem)
          onPress={[Function]}
          style={
            Array [
              Object {
                "paddingRight": 10,
                "paddingVertical": 10,
              },
              Object {
                "borderBottomWidth": 0,
                "marginLeft": 0,
                "paddingLeft": 10,
              },
            ]
          }
        >
          <Styled(Left)
            style={
              Object {
                "flex": 0,
                "paddingRight": 5,
              }
            }
          >
            <Styled(Text)
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              CourseLink
            </Styled(Text)>
          </Styled(Left)>
          <Styled(Content)>
            <Styled(Text)
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ]
              }
            >
              None
            </Styled(Text)>
          </Styled(Content)>
          <Styled(Right)
            style={
              Object {
                "flex": 0.05,
              }
            }
          >
            <Styled(Icon)
              name="arrow-forward"
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ]
              }
            />
          </Styled(Right)>
        </Styled(ListItem)>
      </AnimatedComponent>,
      "style": Object {
        "borderColor": "lightgray",
        "borderLeftWidth": 1,
        "marginLeft": 15,
        "paddingLeft": 10,
      },
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(ListItem)
          onPress={[Function]}
          style={
            Array [
              Object {
                "paddingRight": 10,
                "paddingVertical": 10,
              },
              Object {
                "borderBottomWidth": 0,
                "marginLeft": 0,
                "paddingLeft": 10,
              },
            ]
          }
        >
          <Styled(Left)
            style={
              Object {
                "flex": 0,
                "paddingRight": 5,
              }
            }
          >
            <Styled(Text)
              numberOfLines={1}
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              CourseLink
            </Styled(Text)>
          </Styled(Left)>
          <Styled(Content)>
            <Styled(Text)
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ]
              }
            >
              None
            </Styled(Text)>
          </Styled(Content)>
          <Styled(Right)
            style={
              Object {
                "flex": 0.05,
              }
            }
          >
            <Styled(Icon)
              name="arrow-forward"
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ]
              }
            />
          </Styled(Right)>
        </Styled(ListItem)>,
        "style": Object {
          "opacity": 0,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Left)
              style={
                Object {
                  "flex": 0,
                  "paddingRight": 5,
                }
              }
            >
              <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>
            </Styled(Left)>,
            <Styled(Content)>
              <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>
            </Styled(Content)>,
            <Styled(Right)
              style={
                Object {
                  "flex": 0.05,
                }
              }
            >
              <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />
            </Styled(Right)>,
          ],
          "onPress": [Function],
          "style": Array [
            Object {
              "paddingRight": 10,
              "paddingVertical": 10,
            },
            Object {
              "borderBottomWidth": 0,
              "marginLeft": 0,
              "paddingLeft": 10,
            },
          ],
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>,
              "style": Object {
                "flex": 0,
                "paddingRight": 5,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "CourseLink",
                "numberOfLines": 1,
                "style": Object {
                  "fontSize": 15,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "CourseLink",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "None",
                "numberOfLines": 1,
                "style": Array [
                  Object {
                    "color": "#4E4A47",
                    "fontSize": 15,
                  },
                ],
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "None",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />,
              "style": Object {
                "flex": 0.05,
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "arrow-forward",
                "style": Array [
                  Object {
                    "fontSize": 15,
                  },
                  Object {
                    "color": "#4E4A47",
                  },
                ],
                "virtual": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <AnimatedComponent
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <Styled(ListItem)
            onPress={[Function]}
            style={
              Array [
                Object {
                  "paddingRight": 10,
                  "paddingVertical": 10,
                },
                Object {
                  "borderBottomWidth": 0,
                  "marginLeft": 0,
                  "paddingLeft": 10,
                },
              ]
            }
          >
            <Styled(Left)
              style={
                Object {
                  "flex": 0,
                  "paddingRight": 5,
                }
              }
            >
              <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>
            </Styled(Left)>
            <Styled(Content)>
              <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>
            </Styled(Content)>
            <Styled(Right)
              style={
                Object {
                  "flex": 0.05,
                }
              }
            >
              <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />
            </Styled(Right)>
          </Styled(ListItem)>
        </AnimatedComponent>,
        "style": Object {
          "borderColor": "lightgray",
          "borderLeftWidth": 1,
          "marginLeft": 15,
          "paddingLeft": 10,
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(ListItem)
            onPress={[Function]}
            style={
              Array [
                Object {
                  "paddingRight": 10,
                  "paddingVertical": 10,
                },
                Object {
                  "borderBottomWidth": 0,
                  "marginLeft": 0,
                  "paddingLeft": 10,
                },
              ]
            }
          >
            <Styled(Left)
              style={
                Object {
                  "flex": 0,
                  "paddingRight": 5,
                }
              }
            >
              <Styled(Text)
                numberOfLines={1}
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                CourseLink
              </Styled(Text)>
            </Styled(Left)>
            <Styled(Content)>
              <Styled(Text)
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ]
                }
              >
                None
              </Styled(Text)>
            </Styled(Content)>
            <Styled(Right)
              style={
                Object {
                  "flex": 0.05,
                }
              }
            >
              <Styled(Icon)
                name="arrow-forward"
                style={
                  Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ]
                }
              />
            </Styled(Right)>
          </Styled(ListItem)>,
          "style": Object {
            "opacity": 0,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Left)
                style={
                  Object {
                    "flex": 0,
                    "paddingRight": 5,
                  }
                }
              >
                <Styled(Text)
                  numberOfLines={1}
                  style={
                    Object {
                      "fontSize": 15,
                    }
                  }
                >
                  CourseLink
                </Styled(Text)>
              </Styled(Left)>,
              <Styled(Content)>
                <Styled(Text)
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#4E4A47",
                        "fontSize": 15,
                      },
                    ]
                  }
                >
                  None
                </Styled(Text)>
              </Styled(Content)>,
              <Styled(Right)
                style={
                  Object {
                    "flex": 0.05,
                  }
                }
              >
                <Styled(Icon)
                  name="arrow-forward"
                  style={
                    Array [
                      Object {
                        "fontSize": 15,
                      },
                      Object {
                        "color": "#4E4A47",
                      },
                    ]
                  }
                />
              </Styled(Right)>,
            ],
            "onPress": [Function],
            "style": Array [
              Object {
                "paddingRight": 10,
                "paddingVertical": 10,
              },
              Object {
                "borderBottomWidth": 0,
                "marginLeft": 0,
                "paddingLeft": 10,
              },
            ],
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)
                  numberOfLines={1}
                  style={
                    Object {
                      "fontSize": 15,
                    }
                  }
                >
                  CourseLink
                </Styled(Text)>,
                "style": Object {
                  "flex": 0,
                  "paddingRight": 5,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "CourseLink",
                  "numberOfLines": 1,
                  "style": Object {
                    "fontSize": 15,
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "CourseLink",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#4E4A47",
                        "fontSize": 15,
                      },
                    ]
                  }
                >
                  None
                </Styled(Text)>,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "None",
                  "numberOfLines": 1,
                  "style": Array [
                    Object {
                      "color": "#4E4A47",
                      "fontSize": 15,
                    },
                  ],
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "None",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Icon)
                  name="arrow-forward"
                  style={
                    Array [
                      Object {
                        "fontSize": 15,
                      },
                      Object {
                        "color": "#4E4A47",
                      },
                    ]
                  }
                />,
                "style": Object {
                  "flex": 0.05,
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "name": "arrow-forward",
                  "style": Array [
                    Object {
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#4E4A47",
                    },
                  ],
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
