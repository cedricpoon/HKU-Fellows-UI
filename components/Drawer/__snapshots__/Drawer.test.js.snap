// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Drawer Component renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Drawer
    onLogout={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={
            Object {
              "zIndex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "margin": 20,
              }
            }
          >
            <Logo
              size={80}
            />
          </View>
          <DrawerNavigatorItems
            activeBackgroundColor="rgba(0, 0, 0, .04)"
            activeTintColor="#3A936B"
            inactiveBackgroundColor="transparent"
            inactiveTintColor="rgba(0, 0, 0, .87)"
            labelStyle={
              Object {
                "fontSize": 15,
                "fontWeight": "normal",
              }
            }
            onLogout={[Function]}
          />
          <Styled(Button)
            dark={true}
            full={true}
            onPress={[Function]}
            transparent={true}
          >
            <Styled(Text)
              style={
                Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                }
              }
            >
              Log out
            </Styled(Text)>
          </Styled(Button)>
        </View>,
        <Backdrop
          height={0}
          style={
            Object {
              "zIndex": 0,
            }
          }
          width={0}
        />,
      ],
      "forceInset": Object {
        "horizontal": "never",
        "top": "always",
      },
      "onLayout": [Function],
      "style": Object {
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "margin": 20,
                }
              }
            >
              <Logo
                size={80}
              />
            </View>,
            <DrawerNavigatorItems
              activeBackgroundColor="rgba(0, 0, 0, .04)"
              activeTintColor="#3A936B"
              inactiveBackgroundColor="transparent"
              inactiveTintColor="rgba(0, 0, 0, .87)"
              labelStyle={
                Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                }
              }
              onLogout={[Function]}
            />,
            <Styled(Button)
              dark={true}
              full={true}
              onPress={[Function]}
              transparent={true}
            >
              <Styled(Text)
                style={
                  Object {
                    "fontSize": 15,
                    "fontWeight": "normal",
                  }
                }
              >
                Log out
              </Styled(Text)>
            </Styled(Button)>,
          ],
          "style": Object {
            "zIndex": 1,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Logo
                size={80}
              />,
              "style": Object {
                "alignItems": "flex-start",
                "margin": 20,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "size": 80,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeBackgroundColor": "rgba(0, 0, 0, .04)",
              "activeTintColor": "#3A936B",
              "inactiveBackgroundColor": "transparent",
              "inactiveTintColor": "rgba(0, 0, 0, .87)",
              "labelStyle": Object {
                "fontSize": 15,
                "fontWeight": "normal",
              },
              "onLogout": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                style={
                  Object {
                    "fontSize": 15,
                    "fontWeight": "normal",
                  }
                }
              >
                Log out
              </Styled(Text)>,
              "dark": true,
              "full": true,
              "onPress": [Function],
              "transparent": true,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Log out",
                "style": Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "Log out",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "height": 0,
          "style": Object {
            "zIndex": 0,
          },
          "width": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={
              Object {
                "zIndex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "margin": 20,
                }
              }
            >
              <Logo
                size={80}
              />
            </View>
            <DrawerNavigatorItems
              activeBackgroundColor="rgba(0, 0, 0, .04)"
              activeTintColor="#3A936B"
              inactiveBackgroundColor="transparent"
              inactiveTintColor="rgba(0, 0, 0, .87)"
              labelStyle={
                Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                }
              }
              onLogout={[Function]}
            />
            <Styled(Button)
              dark={true}
              full={true}
              onPress={[Function]}
              transparent={true}
            >
              <Styled(Text)
                style={
                  Object {
                    "fontSize": 15,
                    "fontWeight": "normal",
                  }
                }
              >
                Log out
              </Styled(Text)>
            </Styled(Button)>
          </View>,
          <Backdrop
            height={0}
            style={
              Object {
                "zIndex": 0,
              }
            }
            width={0}
          />,
        ],
        "forceInset": Object {
          "horizontal": "never",
          "top": "always",
        },
        "onLayout": [Function],
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "margin": 20,
                  }
                }
              >
                <Logo
                  size={80}
                />
              </View>,
              <DrawerNavigatorItems
                activeBackgroundColor="rgba(0, 0, 0, .04)"
                activeTintColor="#3A936B"
                inactiveBackgroundColor="transparent"
                inactiveTintColor="rgba(0, 0, 0, .87)"
                labelStyle={
                  Object {
                    "fontSize": 15,
                    "fontWeight": "normal",
                  }
                }
                onLogout={[Function]}
              />,
              <Styled(Button)
                dark={true}
                full={true}
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)
                  style={
                    Object {
                      "fontSize": 15,
                      "fontWeight": "normal",
                    }
                  }
                >
                  Log out
                </Styled(Text)>
              </Styled(Button)>,
            ],
            "style": Object {
              "zIndex": 1,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Logo
                  size={80}
                />,
                "style": Object {
                  "alignItems": "flex-start",
                  "margin": 20,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "size": 80,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeBackgroundColor": "rgba(0, 0, 0, .04)",
                "activeTintColor": "#3A936B",
                "inactiveBackgroundColor": "transparent",
                "inactiveTintColor": "rgba(0, 0, 0, .87)",
                "labelStyle": Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                },
                "onLogout": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)
                  style={
                    Object {
                      "fontSize": 15,
                      "fontWeight": "normal",
                    }
                  }
                >
                  Log out
                </Styled(Text)>,
                "dark": true,
                "full": true,
                "onPress": [Function],
                "transparent": true,
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Log out",
                  "style": Object {
                    "fontSize": 15,
                    "fontWeight": "normal",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Log out",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "height": 0,
            "style": Object {
              "zIndex": 0,
            },
            "width": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
