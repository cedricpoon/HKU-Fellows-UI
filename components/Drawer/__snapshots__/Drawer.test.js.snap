// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Drawer Component renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Drawer
    onLogout={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ScrollView
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <DrawerNavigatorItems
          activeBackgroundColor="rgba(0, 0, 0, .04)"
          activeTintColor="#4BBC89"
          inactiveBackgroundColor="transparent"
          inactiveTintColor="rgba(0, 0, 0, .87)"
          labelStyle={
            Object {
              "fontSize": 15,
              "fontWeight": "normal",
            }
          }
          onLogout={[Function]}
        />
        <Styled(Button)
          dark={true}
          full={true}
          onPress={[Function]}
          transparent={true}
        >
          <Styled(Text)
            style={
              Object {
                "fontSize": 15,
                "fontWeight": "normal",
              }
            }
          >
            Log out
          </Styled(Text)>
        </Styled(Button)>
      </ScrollView>,
      "forceInset": Object {
        "horizontal": "never",
        "top": "always",
      },
      "style": Object {
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <DrawerNavigatorItems
            activeBackgroundColor="rgba(0, 0, 0, .04)"
            activeTintColor="#4BBC89"
            inactiveBackgroundColor="transparent"
            inactiveTintColor="rgba(0, 0, 0, .87)"
            labelStyle={
              Object {
                "fontSize": 15,
                "fontWeight": "normal",
              }
            }
            onLogout={[Function]}
          />,
          <Styled(Button)
            dark={true}
            full={true}
            onPress={[Function]}
            transparent={true}
          >
            <Styled(Text)
              style={
                Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                }
              }
            >
              Log out
            </Styled(Text)>
          </Styled(Button)>,
        ],
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeBackgroundColor": "rgba(0, 0, 0, .04)",
            "activeTintColor": "#4BBC89",
            "inactiveBackgroundColor": "transparent",
            "inactiveTintColor": "rgba(0, 0, 0, .87)",
            "labelStyle": Object {
              "fontSize": 15,
              "fontWeight": "normal",
            },
            "onLogout": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Text)
              style={
                Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                }
              }
            >
              Log out
            </Styled(Text)>,
            "dark": true,
            "full": true,
            "onPress": [Function],
            "transparent": true,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Log out",
              "style": Object {
                "fontSize": 15,
                "fontWeight": "normal",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "Log out",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [MockFunction],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ScrollView
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <DrawerNavigatorItems
            activeBackgroundColor="rgba(0, 0, 0, .04)"
            activeTintColor="#4BBC89"
            inactiveBackgroundColor="transparent"
            inactiveTintColor="rgba(0, 0, 0, .87)"
            labelStyle={
              Object {
                "fontSize": 15,
                "fontWeight": "normal",
              }
            }
            onLogout={[Function]}
          />
          <Styled(Button)
            dark={true}
            full={true}
            onPress={[Function]}
            transparent={true}
          >
            <Styled(Text)
              style={
                Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                }
              }
            >
              Log out
            </Styled(Text)>
          </Styled(Button)>
        </ScrollView>,
        "forceInset": Object {
          "horizontal": "never",
          "top": "always",
        },
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DrawerNavigatorItems
              activeBackgroundColor="rgba(0, 0, 0, .04)"
              activeTintColor="#4BBC89"
              inactiveBackgroundColor="transparent"
              inactiveTintColor="rgba(0, 0, 0, .87)"
              labelStyle={
                Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                }
              }
              onLogout={[Function]}
            />,
            <Styled(Button)
              dark={true}
              full={true}
              onPress={[Function]}
              transparent={true}
            >
              <Styled(Text)
                style={
                  Object {
                    "fontSize": 15,
                    "fontWeight": "normal",
                  }
                }
              >
                Log out
              </Styled(Text)>
            </Styled(Button)>,
          ],
          "style": Object {
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeBackgroundColor": "rgba(0, 0, 0, .04)",
              "activeTintColor": "#4BBC89",
              "inactiveBackgroundColor": "transparent",
              "inactiveTintColor": "rgba(0, 0, 0, .87)",
              "labelStyle": Object {
                "fontSize": 15,
                "fontWeight": "normal",
              },
              "onLogout": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                style={
                  Object {
                    "fontSize": 15,
                    "fontWeight": "normal",
                  }
                }
              >
                Log out
              </Styled(Text)>,
              "dark": true,
              "full": true,
              "onPress": [Function],
              "transparent": true,
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Log out",
                "style": Object {
                  "fontSize": 15,
                  "fontWeight": "normal",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": "Log out",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [MockFunction],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
