// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Drawer Component renders as expected 1`] = `
<SafeAreaView
  forceInset={
    Object {
      "horizontal": "never",
      "top": "always",
    }
  }
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "margin": 20,
        }
      }
    >
      <Logo
        size={80}
      />
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "flexDirection": "column",
              "justifyContent": "space-between",
            },
            Object {
              "height": 80,
            },
          ]
        }
      >
        <Styled(Text)
          style={
            Object {
              "color": "grey",
              "fontSize": 10,
            }
          }
        >
          You are logged in as
        </Styled(Text)>
        <Styled(Text)
          style={
            Object {
              "fontSize": 12.5,
            }
          }
        >
          -
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "fontSize": 12.5,
              },
              null,
            ]
          }
        >
          <Styled(Icon)
            name="ios-flame"
            style={
              Array [
                Object {
                  "fontSize": 12.5,
                },
                null,
              ]
            }
          />
          -
        </Styled(Text)>
        <Styled(Text)
          style={
            Object {
              "color": "grey",
              "fontSize": 10,
            }
          }
        >
          <Styled(Icon)
            name="key"
            style={
              Object {
                "color": "grey",
                "fontSize": 10,
              }
            }
            type="Foundation"
          />
          0000000
        </Styled(Text)>
      </View>
    </View>
    <DrawerNavigatorItems
      activeBackgroundColor="rgba(0, 0, 0, .04)"
      activeTintColor="#3A936B"
      inactiveBackgroundColor="transparent"
      inactiveTintColor="rgba(0, 0, 0, .87)"
      labelStyle={
        Object {
          "fontSize": 15,
          "fontWeight": "normal",
        }
      }
      onLogout={[Function]}
      onTemperature={[Function]}
      temperature={null}
      token7digits="0000000"
      username="-"
    />
    <Styled(Button)
      dark={true}
      full={true}
      onPress={[Function]}
      transparent={true}
    >
      <Styled(Text)
        style={
          Object {
            "fontSize": 15,
            "fontWeight": "normal",
          }
        }
      >
        Refresh Rating
      </Styled(Text)>
    </Styled(Button)>
    <Styled(Button)
      dark={true}
      full={true}
      onPress={[Function]}
      transparent={true}
    >
      <Styled(Text)
        style={
          Object {
            "fontSize": 15,
            "fontWeight": "normal",
          }
        }
      >
        Log out
      </Styled(Text)>
    </Styled(Button)>
  </View>
  <Backdrop
    height={0}
    style={
      Object {
        "zIndex": 0,
      }
    }
    width={0}
  />
</SafeAreaView>
`;
