// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing PostPlaceholder Component renders as expected with headline colored 1`] = `
<withAnimatable(Styled(Body))
  animation="fadeIn"
  delay={0}
  direction="normal"
  duration={250}
  iterationCount={1}
  iterationDelay={0}
  onAnimationBegin={[Function]}
  onAnimationEnd={[Function]}
  onTransitionBegin={[Function]}
  onTransitionEnd={[Function]}
  style={
    Object {
      "marginVertical": 25,
    }
  }
  useNativeDriver={false}
>
  <Styled(Text)
    style={
      Object {
        "color": "green",
      }
    }
  />
</withAnimatable(Styled(Body))>
`;

exports[`Testing PostPlaceholder Component renders as expected with required props 1`] = `
<withAnimatable(Styled(Body))
  animation="fadeIn"
  delay={0}
  direction="normal"
  duration={250}
  iterationCount={1}
  iterationDelay={0}
  onAnimationBegin={[Function]}
  onAnimationEnd={[Function]}
  onTransitionBegin={[Function]}
  onTransitionEnd={[Function]}
  style={
    Object {
      "marginVertical": 25,
    }
  }
  useNativeDriver={false}
>
  <Styled(Text)
    style={
      Object {
        "color": undefined,
      }
    }
  />
</withAnimatable(Styled(Body))>
`;

exports[`Testing PostPlaceholder Component renders as expected with subHeadline 1`] = `
<withAnimatable(Styled(Body))
  animation="fadeIn"
  delay={0}
  direction="normal"
  duration={250}
  iterationCount={1}
  iterationDelay={0}
  onAnimationBegin={[Function]}
  onAnimationEnd={[Function]}
  onTransitionBegin={[Function]}
  onTransitionEnd={[Function]}
  style={
    Object {
      "marginVertical": 25,
    }
  }
  useNativeDriver={false}
>
  <Styled(Text)
    style={
      Object {
        "color": undefined,
      }
    }
  />
</withAnimatable(Styled(Body))>
`;

exports[`Testing PostPlaceholder Component renders as expected with subHeadline and icon and button 1`] = `
<withAnimatable(Styled(Body))
  animation="fadeIn"
  delay={0}
  direction="normal"
  duration={250}
  iterationCount={1}
  iterationDelay={0}
  onAnimationBegin={[Function]}
  onAnimationEnd={[Function]}
  onTransitionBegin={[Function]}
  onTransitionEnd={[Function]}
  style={
    Object {
      "marginVertical": 25,
    }
  }
  useNativeDriver={false}
>
  <Styled(Text)
    style={
      Object {
        "color": undefined,
      }
    }
  />
  <Styled(Button)
    bordered={true}
    style={
      Object {
        "alignSelf": "center",
        "borderColor": "#808080",
        "height": null,
        "marginTop": 20,
      }
    }
  >
    <Styled(Text)
      note={true}
    />
  </Styled(Button)>
</withAnimatable(Styled(Body))>
`;
