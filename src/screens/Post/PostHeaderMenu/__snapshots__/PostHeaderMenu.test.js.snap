// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing PostHeaderMenu Component has onRef 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostHeaderMenu
    onRef={[Function]}
    position={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    toggle={[Function]}
  >
    <View />
  </PostHeaderMenu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Button)
        full={true}
        iconRight={true}
        info={true}
        transparent={true}
      >
        <Styled(Text)>
          From Moodle
        </Styled(Text)>
        <Styled(Icon)
          name="link"
          type="MaterialIcons"
        />
      </Styled(Button)>,
      "position": Object {
        "x": 0,
        "y": 0,
      },
      "toggle": [Function],
    },
    "ref": [Function],
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Text)>
            From Moodle
          </Styled(Text)>,
          <Styled(Icon)
            name="link"
            type="MaterialIcons"
          />,
        ],
        "full": true,
        "iconRight": true,
        "info": true,
        "transparent": true,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "From Moodle",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "From Moodle",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "name": "link",
            "type": "MaterialIcons",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Button)
          full={true}
          iconRight={true}
          info={true}
          transparent={true}
        >
          <Styled(Text)>
            From Moodle
          </Styled(Text)>
          <Styled(Icon)
            name="link"
            type="MaterialIcons"
          />
        </Styled(Button)>,
        "position": Object {
          "x": 0,
          "y": 0,
        },
        "toggle": [Function],
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Text)>
              From Moodle
            </Styled(Text)>,
            <Styled(Icon)
              name="link"
              type="MaterialIcons"
            />,
          ],
          "full": true,
          "iconRight": true,
          "info": true,
          "transparent": true,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "From Moodle",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "From Moodle",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "link",
              "type": "MaterialIcons",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing PostHeaderMenu Component renders as expected with PopupMenu required props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostHeaderMenu
    position={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    toggle={[Function]}
  >
    <View />
  </PostHeaderMenu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(Button)
        full={true}
        iconRight={true}
        info={true}
        transparent={true}
      >
        <Styled(Text)>
          From Moodle
        </Styled(Text)>
        <Styled(Icon)
          name="link"
          type="MaterialIcons"
        />
      </Styled(Button)>,
      "position": Object {
        "x": 0,
        "y": 0,
      },
      "toggle": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Text)>
            From Moodle
          </Styled(Text)>,
          <Styled(Icon)
            name="link"
            type="MaterialIcons"
          />,
        ],
        "full": true,
        "iconRight": true,
        "info": true,
        "transparent": true,
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "From Moodle",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": "From Moodle",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "name": "link",
            "type": "MaterialIcons",
            "virtual": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(Button)
          full={true}
          iconRight={true}
          info={true}
          transparent={true}
        >
          <Styled(Text)>
            From Moodle
          </Styled(Text)>
          <Styled(Icon)
            name="link"
            type="MaterialIcons"
          />
        </Styled(Button)>,
        "position": Object {
          "x": 0,
          "y": 0,
        },
        "toggle": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Text)>
              From Moodle
            </Styled(Text)>,
            <Styled(Icon)
              name="link"
              type="MaterialIcons"
            />,
          ],
          "full": true,
          "iconRight": true,
          "info": true,
          "transparent": true,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "From Moodle",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": "From Moodle",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "link",
              "type": "MaterialIcons",
              "virtual": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
