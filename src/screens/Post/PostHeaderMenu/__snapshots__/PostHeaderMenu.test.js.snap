// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing PostHeaderMenu Component can be subscribed 1`] = `
<PopupMenu
  position={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  postId="postId"
  toggle={[Function]}
  topicId="topicId"
  uid="uid"
>
  <Styled(Button)
    disabled={false}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="last-page"
      style={
        Array [
          Object {
            "textAlign": "center",
            "width": 25,
          },
          Object {
            "color": "#4E4A47",
          },
        ]
      }
      type="MaterialIcons"
    />
    <Styled(Text)
      style={
        Object {
          "color": "#4E4A47",
        }
      }
    >
      Latest Reply
    </Styled(Text)>
  </Styled(Button)>
  <Styled(Button)
    danger={true}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="report"
      style={
        Object {
          "textAlign": "center",
          "width": 25,
        }
      }
      type="MaterialIcons"
    />
    <Styled(Text)>
      Report Abuse
    </Styled(Text)>
  </Styled(Button)>
</PopupMenu>
`;

exports[`Testing PostHeaderMenu Component can goto last 1`] = `
<PopupMenu
  position={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  postId="postId"
  toggle={[Function]}
  topicId="topicId"
  uid="uid"
>
  <Styled(Button)
    disabled={false}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="last-page"
      style={
        Array [
          Object {
            "textAlign": "center",
            "width": 25,
          },
          Object {
            "color": "#4E4A47",
          },
        ]
      }
      type="MaterialIcons"
    />
    <Styled(Text)
      style={
        Object {
          "color": "#4E4A47",
        }
      }
    >
      Latest Reply
    </Styled(Text)>
  </Styled(Button)>
  <Styled(Button)
    danger={true}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="report"
      style={
        Object {
          "textAlign": "center",
          "width": 25,
        }
      }
      type="MaterialIcons"
    />
    <Styled(Text)>
      Report Abuse
    </Styled(Text)>
  </Styled(Button)>
</PopupMenu>
`;

exports[`Testing PostHeaderMenu Component has onRef 1`] = `
<PopupMenu
  position={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  postId="postId"
  toggle={[Function]}
  topicId="topicId"
  uid="uid"
>
  <Styled(Button)
    disabled={false}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="last-page"
      style={
        Array [
          Object {
            "textAlign": "center",
            "width": 25,
          },
          Object {
            "color": "#4E4A47",
          },
        ]
      }
      type="MaterialIcons"
    />
    <Styled(Text)
      style={
        Object {
          "color": "#4E4A47",
        }
      }
    >
      Latest Reply
    </Styled(Text)>
  </Styled(Button)>
  <Styled(Button)
    danger={true}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="report"
      style={
        Object {
          "textAlign": "center",
          "width": 25,
        }
      }
      type="MaterialIcons"
    />
    <Styled(Text)>
      Report Abuse
    </Styled(Text)>
  </Styled(Button)>
</PopupMenu>
`;

exports[`Testing PostHeaderMenu Component is owned by logged user 1`] = `
<PopupMenu
  position={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  postId="postId"
  toggle={[Function]}
  topicId="topicId"
  uid="uid"
>
  <Styled(Button)
    disabled={false}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="last-page"
      style={
        Array [
          Object {
            "textAlign": "center",
            "width": 25,
          },
          Object {
            "color": "#4E4A47",
          },
        ]
      }
      type="MaterialIcons"
    />
    <Styled(Text)
      style={
        Object {
          "color": "#4E4A47",
        }
      }
    >
      Latest Reply
    </Styled(Text)>
  </Styled(Button)>
  <Styled(Button)
    danger={true}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="report"
      style={
        Object {
          "textAlign": "center",
          "width": 25,
        }
      }
      type="MaterialIcons"
    />
    <Styled(Text)>
      Report Abuse
    </Styled(Text)>
  </Styled(Button)>
</PopupMenu>
`;

exports[`Testing PostHeaderMenu Component is solved 1`] = `
<PopupMenu
  position={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  postId="postId"
  toggle={[Function]}
  topicId="topicId"
  uid="uid"
>
  <Styled(Button)
    disabled={false}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="last-page"
      style={
        Array [
          Object {
            "textAlign": "center",
            "width": 25,
          },
          Object {
            "color": "#4E4A47",
          },
        ]
      }
      type="MaterialIcons"
    />
    <Styled(Text)
      style={
        Object {
          "color": "#4E4A47",
        }
      }
    >
      Latest Reply
    </Styled(Text)>
  </Styled(Button)>
  <Styled(Button)
    danger={true}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="report"
      style={
        Object {
          "textAlign": "center",
          "width": 25,
        }
      }
      type="MaterialIcons"
    />
    <Styled(Text)>
      Report Abuse
    </Styled(Text)>
  </Styled(Button)>
</PopupMenu>
`;

exports[`Testing PostHeaderMenu Component renders as expected with PopupMenu required props 1`] = `
<PopupMenu
  position={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  postId="postId"
  toggle={[Function]}
  topicId="topicId"
  uid="uid"
>
  <Styled(Button)
    disabled={false}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="last-page"
      style={
        Array [
          Object {
            "textAlign": "center",
            "width": 25,
          },
          Object {
            "color": "#4E4A47",
          },
        ]
      }
      type="MaterialIcons"
    />
    <Styled(Text)
      style={
        Object {
          "color": "#4E4A47",
        }
      }
    >
      Latest Reply
    </Styled(Text)>
  </Styled(Button)>
  <Styled(Button)
    danger={true}
    iconLeft={true}
    onPress={[Function]}
    transparent={true}
  >
    <Styled(Icon)
      name="report"
      style={
        Object {
          "textAlign": "center",
          "width": 25,
        }
      }
      type="MaterialIcons"
    />
    <Styled(Text)>
      Report Abuse
    </Styled(Text)>
  </Styled(Button)>
</PopupMenu>
`;
