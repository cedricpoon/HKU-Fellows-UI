// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Preview Screen is loaded 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Preview
    expandStatus="BLAND"
    loadStatus="OK"
    location=""
    onLoadMore={[Function]}
    onLoadPost={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <PreviewHeader
          location=""
        />,
        <Connect(PostPreviewLoader)
          ListFooterComponent={[Function]}
          getItemLayout={[Function]}
          onEndReached={[Function]}
          onEndReachedThreshold={0.35}
          onScroll={[Function]}
          onUnmount={[Function]}
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />
          }
          removeClippedSubviews={true}
        />,
        <PreviewFooter
          muted={true}
          onRefresh={[Function]}
          refreshing={false}
        />,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "location": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ListFooterComponent": [Function],
          "getItemLayout": [Function],
          "onEndReached": [Function],
          "onEndReachedThreshold": 0.35,
          "onScroll": [Function],
          "onUnmount": [Function],
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
            tintColor="#ddd"
          />,
          "removeClippedSubviews": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "muted": true,
          "onRefresh": [Function],
          "refreshing": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <PreviewHeader
            location=""
          />,
          <Connect(PostPreviewLoader)
            ListFooterComponent={[Function]}
            getItemLayout={[Function]}
            onEndReached={[Function]}
            onEndReachedThreshold={0.35}
            onScroll={[Function]}
            onUnmount={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
                tintColor="#ddd"
              />
            }
            removeClippedSubviews={true}
          />,
          <PreviewFooter
            muted={true}
            onRefresh={[Function]}
            refreshing={false}
          />,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "location": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ListFooterComponent": [Function],
            "getItemLayout": [Function],
            "onEndReached": [Function],
            "onEndReachedThreshold": 0.35,
            "onScroll": [Function],
            "onUnmount": [Function],
            "refreshControl": <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />,
            "removeClippedSubviews": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "muted": true,
            "onRefresh": [Function],
            "refreshing": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing Preview Screen renders as expected with last post 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Preview
    expandStatus="HALT"
    loadStatus="OK"
    location=""
    onLoadMore={[Function]}
    onLoadPost={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <PreviewHeader
          location=""
        />,
        <Connect(PostPreviewLoader)
          ListFooterComponent={[Function]}
          getItemLayout={[Function]}
          onEndReached={[Function]}
          onEndReachedThreshold={0.35}
          onScroll={[Function]}
          onUnmount={[Function]}
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />
          }
          removeClippedSubviews={true}
        />,
        <PreviewFooter
          muted={true}
          onRefresh={[Function]}
          refreshing={false}
        />,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "location": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ListFooterComponent": [Function],
          "getItemLayout": [Function],
          "onEndReached": [Function],
          "onEndReachedThreshold": 0.35,
          "onScroll": [Function],
          "onUnmount": [Function],
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
            tintColor="#ddd"
          />,
          "removeClippedSubviews": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "muted": true,
          "onRefresh": [Function],
          "refreshing": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <PreviewHeader
            location=""
          />,
          <Connect(PostPreviewLoader)
            ListFooterComponent={[Function]}
            getItemLayout={[Function]}
            onEndReached={[Function]}
            onEndReachedThreshold={0.35}
            onScroll={[Function]}
            onUnmount={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
                tintColor="#ddd"
              />
            }
            removeClippedSubviews={true}
          />,
          <PreviewFooter
            muted={true}
            onRefresh={[Function]}
            refreshing={false}
          />,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "location": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ListFooterComponent": [Function],
            "getItemLayout": [Function],
            "onEndReached": [Function],
            "onEndReachedThreshold": 0.35,
            "onScroll": [Function],
            "onUnmount": [Function],
            "refreshControl": <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />,
            "removeClippedSubviews": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "muted": true,
            "onRefresh": [Function],
            "refreshing": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing Preview Screen renders as expected with loading more 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Preview
    expandStatus="EXPANDING"
    loadStatus="OK"
    location=""
    onLoadMore={[Function]}
    onLoadPost={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <PreviewHeader
          location=""
        />,
        <Connect(PostPreviewLoader)
          ListFooterComponent={[Function]}
          getItemLayout={[Function]}
          onEndReached={[Function]}
          onEndReachedThreshold={0.35}
          onScroll={[Function]}
          onUnmount={[Function]}
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />
          }
          removeClippedSubviews={true}
        />,
        <PreviewFooter
          muted={true}
          onRefresh={[Function]}
          refreshing={false}
        />,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "location": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ListFooterComponent": [Function],
          "getItemLayout": [Function],
          "onEndReached": [Function],
          "onEndReachedThreshold": 0.35,
          "onScroll": [Function],
          "onUnmount": [Function],
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
            tintColor="#ddd"
          />,
          "removeClippedSubviews": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "muted": true,
          "onRefresh": [Function],
          "refreshing": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <PreviewHeader
            location=""
          />,
          <Connect(PostPreviewLoader)
            ListFooterComponent={[Function]}
            getItemLayout={[Function]}
            onEndReached={[Function]}
            onEndReachedThreshold={0.35}
            onScroll={[Function]}
            onUnmount={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
                tintColor="#ddd"
              />
            }
            removeClippedSubviews={true}
          />,
          <PreviewFooter
            muted={true}
            onRefresh={[Function]}
            refreshing={false}
          />,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "location": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ListFooterComponent": [Function],
            "getItemLayout": [Function],
            "onEndReached": [Function],
            "onEndReachedThreshold": 0.35,
            "onScroll": [Function],
            "onUnmount": [Function],
            "refreshControl": <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />,
            "removeClippedSubviews": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "muted": true,
            "onRefresh": [Function],
            "refreshing": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing Preview Screen renders as expected without load more 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Preview
    expandStatus="BLAND"
    loadStatus="OK"
    location=""
    onLoadMore={[Function]}
    onLoadPost={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <PreviewHeader
          location=""
        />,
        <Connect(PostPreviewLoader)
          ListFooterComponent={[Function]}
          getItemLayout={[Function]}
          onEndReached={[Function]}
          onEndReachedThreshold={0.35}
          onScroll={[Function]}
          onUnmount={[Function]}
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />
          }
          removeClippedSubviews={true}
        />,
        <PreviewFooter
          muted={true}
          onRefresh={[Function]}
          refreshing={false}
        />,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "location": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ListFooterComponent": [Function],
          "getItemLayout": [Function],
          "onEndReached": [Function],
          "onEndReachedThreshold": 0.35,
          "onScroll": [Function],
          "onUnmount": [Function],
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
            tintColor="#ddd"
          />,
          "removeClippedSubviews": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "muted": true,
          "onRefresh": [Function],
          "refreshing": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <PreviewHeader
            location=""
          />,
          <Connect(PostPreviewLoader)
            ListFooterComponent={[Function]}
            getItemLayout={[Function]}
            onEndReached={[Function]}
            onEndReachedThreshold={0.35}
            onScroll={[Function]}
            onUnmount={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
                tintColor="#ddd"
              />
            }
            removeClippedSubviews={true}
          />,
          <PreviewFooter
            muted={true}
            onRefresh={[Function]}
            refreshing={false}
          />,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "location": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ListFooterComponent": [Function],
            "getItemLayout": [Function],
            "onEndReached": [Function],
            "onEndReachedThreshold": 0.35,
            "onScroll": [Function],
            "onUnmount": [Function],
            "refreshControl": <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
              tintColor="#ddd"
            />,
            "removeClippedSubviews": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "muted": true,
            "onRefresh": [Function],
            "refreshing": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
