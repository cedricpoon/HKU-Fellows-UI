// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Preview Screen is loaded 1`] = `
<Styled(Container)>
  <PreviewHeader
    location=""
    onCancel={[Function]}
    onSearchThunk={[Function]}
  />
  <Connect(PostPreviewLoader)
    ListFooterComponent={[Function]}
    getItemLayout={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.35}
    onScroll={[Function]}
    onUnmount={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#ddd"
      />
    }
    removeClippedSubviews={true}
  />
  <PreviewFooter
    muted={true}
    onRefresh={[Function]}
    popupProps={
      Object {
        "disabled": 1,
        "onFilterThunk": [Function],
      }
    }
    refreshing={false}
  />
</Styled(Container)>
`;

exports[`Testing Preview Screen renders as expected with last post 1`] = `
<Styled(Container)>
  <PreviewHeader
    location=""
    onCancel={[Function]}
    onSearchThunk={[Function]}
  />
  <Connect(PostPreviewLoader)
    ListFooterComponent={[Function]}
    getItemLayout={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.35}
    onScroll={[Function]}
    onUnmount={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#ddd"
      />
    }
    removeClippedSubviews={true}
  />
  <PreviewFooter
    muted={true}
    onRefresh={[Function]}
    popupProps={
      Object {
        "disabled": 1,
        "onFilterThunk": [Function],
      }
    }
    refreshing={false}
  />
</Styled(Container)>
`;

exports[`Testing Preview Screen renders as expected with loading more 1`] = `
<Styled(Container)>
  <PreviewHeader
    location=""
    onCancel={[Function]}
    onSearchThunk={[Function]}
  />
  <Connect(PostPreviewLoader)
    ListFooterComponent={[Function]}
    getItemLayout={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.35}
    onScroll={[Function]}
    onUnmount={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#ddd"
      />
    }
    removeClippedSubviews={true}
  />
  <PreviewFooter
    muted={true}
    onRefresh={[Function]}
    popupProps={
      Object {
        "disabled": 1,
        "onFilterThunk": [Function],
      }
    }
    refreshing={false}
  />
</Styled(Container)>
`;

exports[`Testing Preview Screen renders as expected without load more 1`] = `
<Styled(Container)>
  <PreviewHeader
    location=""
    onCancel={[Function]}
    onSearchThunk={[Function]}
  />
  <Connect(PostPreviewLoader)
    ListFooterComponent={[Function]}
    getItemLayout={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.35}
    onScroll={[Function]}
    onUnmount={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#ddd"
      />
    }
    removeClippedSubviews={true}
  />
  <PreviewFooter
    muted={true}
    onRefresh={[Function]}
    popupProps={
      Object {
        "disabled": 1,
        "onFilterThunk": [Function],
      }
    }
    refreshing={false}
  />
</Styled(Container)>
`;
