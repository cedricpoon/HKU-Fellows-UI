// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing SelectCourse Screen renders as expected with defaultProps 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SelectCourse
    breadcrumb={Array []}
    courses={Array []}
    onSetSelectCourseIndex={[Function]}
    onUpdateLocationAndLoadPost={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withNavigation(Header)
          backable={true}
          onRef={[Function]}
          onRightPress={[Function]}
          rightIcon="arrow-dropup"
          title="Courses"
        />,
        <Styled(Content)
          padder={true}
        >
          <CourseScrollable
            expandedList={Array []}
            list={Array []}
            onItemPressWrapper={[Function]}
            onSetSelectCourseIndex={[Function]}
          />
        </Styled(Content)>,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backable": true,
          "onRef": [Function],
          "onRightPress": [Function],
          "rightIcon": "arrow-dropup",
          "title": "Courses",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <CourseScrollable
            expandedList={Array []}
            list={Array []}
            onItemPressWrapper={[Function]}
            onSetSelectCourseIndex={[Function]}
          />,
          "padder": true,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "expandedList": Array [],
            "list": Array [],
            "onItemPressWrapper": [Function],
            "onSetSelectCourseIndex": [Function],
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withNavigation(Header)
            backable={true}
            onRef={[Function]}
            onRightPress={[Function]}
            rightIcon="arrow-dropup"
            title="Courses"
          />,
          <Styled(Content)
            padder={true}
          >
            <CourseScrollable
              expandedList={Array []}
              list={Array []}
              onItemPressWrapper={[Function]}
              onSetSelectCourseIndex={[Function]}
            />
          </Styled(Content)>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "backable": true,
            "onRef": [Function],
            "onRightPress": [Function],
            "rightIcon": "arrow-dropup",
            "title": "Courses",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CourseScrollable
              expandedList={Array []}
              list={Array []}
              onItemPressWrapper={[Function]}
              onSetSelectCourseIndex={[Function]}
            />,
            "padder": true,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "expandedList": Array [],
              "list": Array [],
              "onItemPressWrapper": [Function],
              "onSetSelectCourseIndex": [Function],
            },
            "ref": [Function],
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing SelectCourse Screen renders as expected with defaultProps and breadcrumb 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SelectCourse
    breadcrumb={Array []}
    courses={Array []}
    onSetSelectCourseIndex={[Function]}
    onUpdateLocationAndLoadPost={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withNavigation(Header)
          backable={true}
          onRef={[Function]}
          onRightPress={[Function]}
          rightIcon="arrow-dropup"
          title="Courses"
        />,
        <Styled(Content)
          padder={true}
        >
          <CourseScrollable
            expandedList={Array []}
            list={Array []}
            onItemPressWrapper={[Function]}
            onSetSelectCourseIndex={[Function]}
          />
        </Styled(Content)>,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backable": true,
          "onRef": [Function],
          "onRightPress": [Function],
          "rightIcon": "arrow-dropup",
          "title": "Courses",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <CourseScrollable
            expandedList={Array []}
            list={Array []}
            onItemPressWrapper={[Function]}
            onSetSelectCourseIndex={[Function]}
          />,
          "padder": true,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "expandedList": Array [],
            "list": Array [],
            "onItemPressWrapper": [Function],
            "onSetSelectCourseIndex": [Function],
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withNavigation(Header)
            backable={true}
            onRef={[Function]}
            onRightPress={[Function]}
            rightIcon="arrow-dropup"
            title="Courses"
          />,
          <Styled(Content)
            padder={true}
          >
            <CourseScrollable
              expandedList={Array []}
              list={Array []}
              onItemPressWrapper={[Function]}
              onSetSelectCourseIndex={[Function]}
            />
          </Styled(Content)>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "backable": true,
            "onRef": [Function],
            "onRightPress": [Function],
            "rightIcon": "arrow-dropup",
            "title": "Courses",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CourseScrollable
              expandedList={Array []}
              list={Array []}
              onItemPressWrapper={[Function]}
              onSetSelectCourseIndex={[Function]}
            />,
            "padder": true,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "expandedList": Array [],
              "list": Array [],
              "onItemPressWrapper": [Function],
              "onSetSelectCourseIndex": [Function],
            },
            "ref": [Function],
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
